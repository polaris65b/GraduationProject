# -*- coding: utf-8 -*-
import sqlite3

import paramiko
import Home
import Calinder
import Train
# Form implementation generated from reading ui file 'user_inform_modify.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class UserInform(object):
    def __init__(self, main_window):
        self.MainWindow = main_window

    def setupUi(self, MainWindow, userID):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        MainWindow.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-30, 0, 1201, 720))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("images/background (2).png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.user_label = QtWidgets.QLabel(self.centralwidget)
        self.user_label.setGeometry(QtCore.QRect(95, 55, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.user_label.setFont(font)
        self.user_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.user_label.setAlignment(QtCore.Qt.AlignCenter)
        self.user_label.setObjectName("user_label")
        self.user_image_label = QtWidgets.QLabel(self.centralwidget)
        self.user_image_label.setGeometry(QtCore.QRect(40, 50, 41, 41))
        self.user_image_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.user_image_label.setText("")
        self.user_image_label.setPixmap(QtGui.QPixmap("images/user (1).png"))
        self.user_image_label.setScaledContents(True)
        self.user_image_label.setObjectName("user_image_label")
        self.home_button = QtWidgets.QPushButton(self.centralwidget)
        self.home_button.setGeometry(QtCore.QRect(40, 220, 161, 31))
        self.home_button.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.home_button.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.home_button.setIcon(icon)
        self.home_button.setIconSize(QtCore.QSize(190, 50))
        self.home_button.setObjectName("home_button")
        self.result_button = QtWidgets.QPushButton(self.centralwidget)
        self.result_button.setGeometry(QtCore.QRect(40, 280, 161, 31))
        self.result_button.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.result_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/trainresult.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.result_button.setIcon(icon1)
        self.result_button.setIconSize(QtCore.QSize(190, 50))
        self.result_button.setObjectName("result_button")
        self.fix_label = QtWidgets.QLabel(self.centralwidget)
        self.fix_label.setGeometry(QtCore.QRect(20, 40, 201, 61))
        self.fix_label.setStyleSheet("border-radius:10px;\n"
"background-color: rgba(157, 157, 157, 45)")
        self.fix_label.setText("")
        self.fix_label.setObjectName("fix_label")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(260, 0, 1071, 721))
        self.label_7.setStyleSheet("background-color:rgb(240,240,240);")
        self.label_7.setText("")
        self.label_7.setScaledContents(False)
        self.label_7.setObjectName("label_7")
        self.start_button = QtWidgets.QPushButton(self.centralwidget)
        self.start_button.setGeometry(QtCore.QRect(50, 520, 161, 161))
        self.start_button.setStyleSheet("background-color:rgba(0, 0, 0, 0);")
        self.start_button.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("images/icon_btn_start_basic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.start_button.setIcon(icon2)
        self.start_button.setIconSize(QtCore.QSize(150, 150))
        self.start_button.setObjectName("start_button")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(305, 90, 931, 591))
        self.groupBox_2.setStyleSheet("border-radius:20px;\n"
"background-color: rgb(255,255,255);\n"
"border: 1px solid rgb(216, 216, 216);")
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox.setGeometry(QtCore.QRect(80, 10, 791, 561))
        self.groupBox.setStyleSheet("border:none;")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(20, 500, 251, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"border:1px solid rgb(0, 0, 0);border:1px solid rgb(211,211,211)")
        self.comboBox.setObjectName("comboBox")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(6, 60, 280, 1))
        self.label_9.setStyleSheet("border:1px solid rgb(211,211,211)")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.height_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.height_text.setGeometry(QtCore.QRect(20, 260, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.height_text.setFont(font)
        self.height_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.height_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.height_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.height_text.setObjectName("height_text")
        self.pass_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.pass_text.setGeometry(QtCore.QRect(460, 190, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.pass_text.setFont(font)
        self.pass_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.pass_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_text.setObjectName("pass_text")
        self.label_fixed_birth = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_birth.setGeometry(QtCore.QRect(20, 150, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_birth.setFont(font)
        self.label_fixed_birth.setStyleSheet("background-color: rgba(255, 255, 255, 0);border:none;")
        self.label_fixed_birth.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_birth.setObjectName("label_fixed_birth")
        self.label_fixed_name = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_name.setGeometry(QtCore.QRect(20, 70, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_name.setFont(font)
        self.label_fixed_name.setStyleSheet("background-color: rgba(255, 255, 255, 0);border:none;")
        self.label_fixed_name.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_name.setObjectName("label_fixed_name")
        self.label_fixed_pwd = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_pwd.setGeometry(QtCore.QRect(460, 159, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_pwd.setFont(font)
        self.label_fixed_pwd.setStyleSheet("border:none;")
        self.label_fixed_pwd.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_pwd.setObjectName("label_fixed_pwd")
        self.id_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.id_text.setGeometry(QtCore.QRect(460, 100, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.id_text.setFont(font)
        self.id_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.id_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.id_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.id_text.setObjectName("id_text")
        self.woman_radiobutton = QtWidgets.QRadioButton(self.groupBox)
        self.woman_radiobutton.setGeometry(QtCore.QRect(120, 430, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.woman_radiobutton.setFont(font)
        self.woman_radiobutton.setStyleSheet("background-color:rgb(255, 255, 255);border:none;")
        self.woman_radiobutton.setObjectName("woman_radiobutton")
        self.label_fixed_height = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_height.setGeometry(QtCore.QRect(20, 230, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_height.setFont(font)
        self.label_fixed_height.setStyleSheet("border:none;")
        self.label_fixed_height.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_height.setObjectName("label_fixed_height")
        self.label_fixed_doctor = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_doctor.setGeometry(QtCore.QRect(20, 469, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_doctor.setFont(font)
        self.label_fixed_doctor.setStyleSheet("background-color: rgba(255, 255, 255, 0);border:none;")
        self.label_fixed_doctor.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_doctor.setObjectName("label_fixed_doctor")
        self.label_fixed__weight = QtWidgets.QLabel(self.groupBox)
        self.label_fixed__weight.setGeometry(QtCore.QRect(20, 310, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed__weight.setFont(font)
        self.label_fixed__weight.setStyleSheet("border:none;background-color:rgba(255,255,255,0);")
        self.label_fixed__weight.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed__weight.setObjectName("label_fixed__weight")
        self.name_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.name_text.setGeometry(QtCore.QRect(20, 100, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.name_text.setFont(font)
        self.name_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.name_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.name_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.name_text.setObjectName("name_text")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(446, 60, 280, 1))
        self.label_6.setStyleSheet("border:1px solid rgb(211,211,211)")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_fixed_sex = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_sex.setGeometry(QtCore.QRect(20, 390, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_sex.setFont(font)
        self.label_fixed_sex.setStyleSheet("background-color: rgba(255, 255, 255, 0);border:none;")
        self.label_fixed_sex.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_sex.setObjectName("label_fixed_sex")
        self.birth_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.birth_text.setGeometry(QtCore.QRect(20, 180, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.birth_text.setFont(font)
        self.birth_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.birth_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.birth_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.birth_text.setObjectName("birth_text")
        self.label_fixed_accountinf = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_accountinf.setGeometry(QtCore.QRect(440, 22, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_fixed_accountinf.setFont(font)
        self.label_fixed_accountinf.setStyleSheet("border:none;")
        self.label_fixed_accountinf.setAlignment(QtCore.Qt.AlignCenter)
        self.label_fixed_accountinf.setObjectName("label_fixed_accountinf")
        self.save_button = QtWidgets.QPushButton(self.groupBox)
        self.save_button.setGeometry(QtCore.QRect(460, 350, 241, 181))
        self.save_button.setStyleSheet("background-color:rgba(0, 0, 0, 0);border:1px solid rgb(211,211,211)")
        self.save_button.setText("")
        self.save_button.setIcon(icon2)
        self.save_button.setIconSize(QtCore.QSize(150, 150))
        self.save_button.setObjectName("save_button")
        self.pass_check_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.pass_check_text.setGeometry(QtCore.QRect(460, 280, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.pass_check_text.setFont(font)
        self.pass_check_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.pass_check_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_check_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_check_text.setObjectName("pass_check_text")
        self.label_fixed_userinf = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_userinf.setGeometry(QtCore.QRect(0, 22, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        self.label_fixed_userinf.setFont(font)
        self.label_fixed_userinf.setStyleSheet("border:none;")
        self.label_fixed_userinf.setAlignment(QtCore.Qt.AlignCenter)
        self.label_fixed_userinf.setObjectName("label_fixed_userinf")
        self.weight_text = QtWidgets.QPlainTextEdit(self.groupBox)
        self.weight_text.setGeometry(QtCore.QRect(20, 340, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.weight_text.setFont(font)
        self.weight_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"border:1px solid rgb(211,211,211)")
        self.weight_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.weight_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.weight_text.setObjectName("weight_text")
        self.label_fixed_pwdcheck = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_pwdcheck.setGeometry(QtCore.QRect(460, 250, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_pwdcheck.setFont(font)
        self.label_fixed_pwdcheck.setStyleSheet("border:none;")
        self.label_fixed_pwdcheck.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_pwdcheck.setObjectName("label_fixed_pwdcheck")
        self.label_fixed_id = QtWidgets.QLabel(self.groupBox)
        self.label_fixed_id.setGeometry(QtCore.QRect(460, 69, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_fixed_id.setFont(font)
        self.label_fixed_id.setStyleSheet("border:none;")
        self.label_fixed_id.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_fixed_id.setObjectName("label_fixed_id")
        self.man_radiobutton = QtWidgets.QRadioButton(self.groupBox)
        self.man_radiobutton.setGeometry(QtCore.QRect(20, 430, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.man_radiobutton.setFont(font)
        self.man_radiobutton.setStyleSheet("background-color:rgb(255, 255, 255);border:none;")
        self.man_radiobutton.setObjectName("man_radiobutton")
        self.label_fixed_pwdcheck.raise_()
        self.comboBox.raise_()
        self.label_9.raise_()
        self.pass_text.raise_()
        self.label_fixed_birth.raise_()
        self.label_fixed_name.raise_()
        self.label_fixed_pwd.raise_()
        self.id_text.raise_()
        self.woman_radiobutton.raise_()
        self.label_fixed_height.raise_()
        self.label_fixed_doctor.raise_()
        self.label_fixed__weight.raise_()
        self.name_text.raise_()
        self.label_6.raise_()
        self.label_fixed_sex.raise_()
        self.birth_text.raise_()
        self.label_fixed_accountinf.raise_()
        self.save_button.raise_()
        self.pass_check_text.raise_()
        self.label_fixed_userinf.raise_()
        self.weight_text.raise_()
        self.label_fixed_id.raise_()
        self.man_radiobutton.raise_()
        self.height_text.raise_()
        self.label_fixed_title_inform_modify = QtWidgets.QLabel(self.centralwidget)
        self.label_fixed_title_inform_modify.setGeometry(QtCore.QRect(300, 30, 191, 41))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(20)
        self.label_fixed_title_inform_modify.setFont(font)
        self.label_fixed_title_inform_modify.setStyleSheet("background-color:rgba(255,255,255,0);")
        self.label_fixed_title_inform_modify.setAlignment(QtCore.Qt.AlignCenter)
        self.label_fixed_title_inform_modify.setObjectName("label_fixed_title_inform_modify")

        ###############################################################
        self.start_button.enterEvent = lambda event: self.start_button_enter_event(event)
        self.start_button.leaveEvent = lambda event: self.start_button_leave_event(event)
        self.home_button.clicked.connect(lambda: self.move_to_home(userID))
        self.result_button.clicked.connect(lambda: self.move_to_result(userID))
        self.start_button.clicked.connect(lambda: self.move_to_train(userID))
        self.save_button.clicked.connect(lambda: self.save_user_inform(userID))
        ###############################################################

        self.label.raise_()
        self.label_7.raise_()
        self.home_button.raise_()
        self.result_button.raise_()
        self.fix_label.raise_()
        self.user_image_label.raise_()
        self.user_label.raise_()
        self.start_button.raise_()
        self.groupBox_2.raise_()
        self.label_fixed_title_inform_modify.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow, userID)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow, userID):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "UserInform"))
        self.user_label.setText(_translate("MainWindow", "사용자"))
        self.label_fixed_birth.setText(_translate("MainWindow", "생년월일"))
        self.label_fixed_name.setText(_translate("MainWindow", "이름"))
        self.label_fixed_pwd.setText(_translate("MainWindow", "비밀번호"))
        self.woman_radiobutton.setText(_translate("MainWindow", "여자"))
        self.label_fixed_height.setText(_translate("MainWindow", "신장"))
        self.label_fixed_doctor.setText(_translate("MainWindow", "담 당 의 사"))
        self.label_fixed__weight.setText(_translate("MainWindow", "체 지 방 률"))
        self.label_fixed_sex.setText(_translate("MainWindow", "성별"))
        self.label_fixed_accountinf.setText(_translate("MainWindow", "계정정보"))
        self.label_fixed_userinf.setText(_translate("MainWindow", "사용자 정보"))
        self.label_fixed_pwdcheck.setText(_translate("MainWindow", "비밀번호  확인"))
        self.label_fixed_id.setText(_translate("MainWindow", "아이디"))
        self.man_radiobutton.setText(_translate("MainWindow", "남자"))
        self.label_fixed_title_inform_modify.setText(_translate("MainWindow", "사용자 정보수정"))
        self.label_setting(userID)

    # 사용자 정보 세팅
    def label_setting(self, userID):
        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        # 쿼리 실행
        cursor.execute("SELECT * FROM user WHERE ID = ?", (userID,))
        row = cursor.fetchall()

        print(row)

        self.user_label.setText(row[0][1])
        self.name_text.setPlainText(row[0][1])
        self.birth_text.setPlainText(row[0][2])
        self.height_text.setPlainText(str(row[0][4]))
        self.weight_text.setPlainText(str(row[0][5]))
        if row[0][3] == 1 :
            self.man_radiobutton.setChecked(True)
        else :
            self.woman_radiobutton.setChecked(True)
        self.doctor_list()
        self.comboBox.setCurrentIndex(row[0][9] - 1)

        self.id_text.setPlainText(row[0][7])
        #self.pass_text.setPlainText(row[0][8])
        #self.pass_check_text.setPlainText(row[0][8])

        # 연결 종료
        conn.close()

        ssh.close()


    # 담당 의사
    def doctor_list(self):
        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        # 쿼리 실행
        try:
            cursor.execute("SELECT * FROM docter")
        except Exception as e:
            print("예외 발생:", e)
        rows = cursor.fetchall()

        for row in rows:
            self.comboBox.addItem(row[3])

        # 연결 종료
        conn.close()

        ssh.close()

    # 사용자 정보 저장
    def save_user_inform(self, userID):
        user_name = self.name_text.toPlainText()
        user_birth = self.birth_text.toPlainText()
        if self.man_radiobutton.isChecked() :
            user_sex = 1
        else :
            user_sex = 2
        user_height = self.height_text.toPlainText()
        user_weight = self.weight_text.toPlainText()
        user_dis = 1
        user_pid = self.id_text.toPlainText()
        if self.pass_text.toPlainText() == self.pass_check_text.toPlainText() :
            user_pass = self.pass_text.toPlainText()

        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        try:
            cursor.execute("UPDATE user SET Name = ?, Birth = ?, Sex = ?, Height = ?, BFP = ?, Dis = ?, Pid = ?, Password = ? WHERE ID = ?",
                           (user_name, user_birth, user_sex, user_height, user_weight, user_dis, user_pid, user_pass, userID,))
            conn.commit()  # 변경 사항을 반영하기 위해 커밋
        except Exception as e:
            print("수정 예외 발생 : ", e)

        # 변경된 데이터베이스 파일을 서버로 다시 업로드
        sftp = ssh.open_sftp()
        sftp.put(local_path, remote_path)
        sftp.close()

        # 연결 종료
        conn.close()
        ssh.close()

        QMessageBox.information(None, "User", "변경되었습니다.")


    # 시작 버튼에 마우스가 올라갔을 때
    def start_button_enter_event(self, event):
        icon = QtGui.QIcon("images/icon_btn_start_hover.png")  # 마우스가 올라갔을 때의 이미지
        self.start_button.setIcon(icon)

    # 시작 버튼에 마우스가 벗어났을 때
    def start_button_leave_event(self, event):
        icon = QtGui.QIcon("images/icon_btn_start_basic.png")
        self.start_button.setIcon(icon)

    # 홈 화면으로 이동
    def move_to_home(self, userID):
        try:
            from Home import Home
            # 현재 MainWindow를 새로운 창으로 변경
            self.MainWindow.setWindowTitle("Home")  # 새 창의 제목 설정 등 필요한 설정 추가 가능
            self.home_window = Home(self.MainWindow)
            print(userID)
            self.home_window.setupUi(self.MainWindow, userID)  # home 클래스의 setupUi 메서드 호출
            self.MainWindow.show()
        except Exception as e:
            print("UserInform to home error : ", e)

    # 결과 화면으로 이동
    def move_to_result(self, userID):
        try:
            from Calinder import Calinder
            # 현재 MainWindow를 새로운 창으로 변경
            self.MainWindow.setWindowTitle("Result")  # 새 창의 제목 설정 등 필요한 설정 추가 가능
            self.result_window = Calinder(self.MainWindow)
            print(userID)
            self.result_window.setupUi(self.MainWindow, userID)  # home 클래스의 setupUi 메서드 호출
            self.MainWindow.show()
        except Exception as e:
            print("UserInform to result error : ", e)

    # 훈련 화면으로 이동
    def move_to_train(self, userID):
        try:
            from Train import Train
            # 현재 MainWindow를 새로운 창으로 변경
            self.MainWindow.setWindowTitle("Result")  # 새 창의 제목 설정 등 필요한 설정 추가 가능
            self.train_window = Train(self.MainWindow)
            print(userID)
            self.train_window.setupUi(self.MainWindow, userID)  # home 클래스의 setupUi 메서드 호출
            self.MainWindow.show()
        except Exception as e:
            print("UserInform to train error : ", e)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = UserInform(MainWindow)
    ui.setupUi(MainWindow, 2)
    MainWindow.show()
    sys.exit(app.exec_())
