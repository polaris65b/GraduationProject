# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Join.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from datetime import datetime
import sqlite3
import paramiko
import Login

userID = 0

class Join(object):
    global userID

    def __init__(self, main_window):
        self.MainWindow = main_window

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        MainWindow.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pass_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.pass_text.setGeometry(QtCore.QRect(610, 210, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pass_text.setFont(font)
        self.pass_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.pass_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_text.setObjectName("pass_text")
        self.id_label = QtWidgets.QLabel(self.centralwidget)
        self.id_label.setGeometry(QtCore.QRect(390, 150, 151, 41))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.id_label.setFont(font)
        self.id_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.id_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.id_label.setObjectName("id_label")
        self.id_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.id_text.setGeometry(QtCore.QRect(610, 160, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.id_text.setFont(font)
        self.id_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.id_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.id_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.id_text.setObjectName("id_text")
        self.join_button = QtWidgets.QPushButton(self.centralwidget)
        self.join_button.setGeometry(QtCore.QRect(670, 610, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(16)
        self.join_button.setFont(font)
        self.join_button.setStyleSheet("")
        self.join_button.setObjectName("join_button")
        self.join_label = QtWidgets.QLabel(self.centralwidget)
        self.join_label.setGeometry(QtCore.QRect(330, 60, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(30)
        font.setBold(False)
        font.setWeight(50)
        self.join_label.setFont(font)
        self.join_label.setStyleSheet("background-color:rgba(0, 0, 0, 0)")
        self.join_label.setObjectName("join_label")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(330, 130, 650, 2))
        self.line.setStyleSheet("border: 1px solid rgb(0, 0, 0);")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.pass_label = QtWidgets.QLabel(self.centralwidget)
        self.pass_label.setGeometry(QtCore.QRect(390, 210, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.pass_label.setFont(font)
        self.pass_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.pass_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.pass_label.setObjectName("pass_label")
        self.pass_check_label = QtWidgets.QLabel(self.centralwidget)
        self.pass_check_label.setGeometry(QtCore.QRect(390, 260, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.pass_check_label.setFont(font)
        self.pass_check_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.pass_check_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.pass_check_label.setObjectName("pass_check_label")
        self.pass_check_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.pass_check_text.setGeometry(QtCore.QRect(610, 260, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pass_check_text.setFont(font)
        self.pass_check_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.pass_check_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_check_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pass_check_text.setObjectName("pass_check_text")
        self.birth_label = QtWidgets.QLabel(self.centralwidget)
        self.birth_label.setGeometry(QtCore.QRect(390, 360, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.birth_label.setFont(font)
        self.birth_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.birth_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.birth_label.setObjectName("birth_label")
        self.birth_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.birth_text.setGeometry(QtCore.QRect(610, 360, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.birth_text.setFont(font)
        self.birth_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.birth_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.birth_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.birth_text.setObjectName("birth_text")
        self.height_label = QtWidgets.QLabel(self.centralwidget)
        self.height_label.setGeometry(QtCore.QRect(390, 450, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.height_label.setFont(font)
        self.height_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.height_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.height_label.setObjectName("height_label")
        self.height_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.height_text.setGeometry(QtCore.QRect(610, 450, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.height_text.setFont(font)
        self.height_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.height_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.height_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.height_text.setObjectName("height_text")
        self.weight_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.weight_text.setGeometry(QtCore.QRect(610, 500, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.weight_text.setFont(font)
        self.weight_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.weight_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.weight_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.weight_text.setObjectName("weight_text")
        self.weight_label = QtWidgets.QLabel(self.centralwidget)
        self.weight_label.setGeometry(QtCore.QRect(390, 500, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.weight_label.setFont(font)
        self.weight_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.weight_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.weight_label.setObjectName("weight_label")
        self.sex_label = QtWidgets.QLabel(self.centralwidget)
        self.sex_label.setGeometry(QtCore.QRect(390, 400, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.sex_label.setFont(font)
        self.sex_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.sex_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.sex_label.setObjectName("sex_label")
        self.man_radiobutton = QtWidgets.QRadioButton(self.centralwidget)
        self.man_radiobutton.setGeometry(QtCore.QRect(610, 400, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.man_radiobutton.setFont(font)
        self.man_radiobutton.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.man_radiobutton.setObjectName("man_radiobutton")
        self.woman_radiobutton = QtWidgets.QRadioButton(self.centralwidget)
        self.woman_radiobutton.setGeometry(QtCore.QRect(770, 400, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.woman_radiobutton.setFont(font)
        self.woman_radiobutton.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.woman_radiobutton.setObjectName("woman_radiobutton")
        self.fix_label_4 = QtWidgets.QLabel(self.centralwidget)
        self.fix_label_4.setGeometry(QtCore.QRect(170, 10, 961, 701))
        self.fix_label_4.setText("")
        self.fix_label_4.setPixmap(QtGui.QPixmap("images/login_background_2.png"))
        self.fix_label_4.setScaledContents(True)
        self.fix_label_4.setObjectName("fix_label_4")
        self.check_button = QtWidgets.QPushButton(self.centralwidget)
        self.check_button.setGeometry(QtCore.QRect(830, 160, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(12)
        self.check_button.setFont(font)
        self.check_button.setStyleSheet("")
        self.check_button.setObjectName("check_button")
        self.login_button = QtWidgets.QPushButton(self.centralwidget)
        self.login_button.setGeometry(QtCore.QRect(400, 610, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(16)
        self.login_button.setFont(font)
        self.login_button.setStyleSheet("")
        self.login_button.setObjectName("login_button")
        self.weight_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.weight_label_2.setGeometry(QtCore.QRect(390, 550, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.weight_label_2.setFont(font)
        self.weight_label_2.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.weight_label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.weight_label_2.setObjectName("weight_label_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(610, 550, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"border:1px solid rgb(0, 0, 0);")
        self.comboBox.setObjectName("comboBox")
        self.name_label = QtWidgets.QLabel(self.centralwidget)
        self.name_label.setGeometry(QtCore.QRect(390, 310, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Noto Sans KR Medium")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.name_label.setFont(font)
        self.name_label.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.name_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.name_label.setObjectName("name_label")
        self.name_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.name_text.setGeometry(QtCore.QRect(610, 310, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.name_text.setFont(font)
        self.name_text.setStyleSheet("background-color:rgb(255, 255,255);\n"
"")
        self.name_text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.name_text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.name_text.setObjectName("name_text")
        self.fix_label_4.raise_()
        self.pass_text.raise_()
        self.id_label.raise_()
        self.id_text.raise_()
        self.join_button.raise_()
        self.join_label.raise_()
        self.line.raise_()
        self.pass_label.raise_()
        self.pass_check_label.raise_()
        self.pass_check_text.raise_()
        self.birth_label.raise_()
        self.birth_text.raise_()
        self.height_label.raise_()
        self.height_text.raise_()
        self.weight_text.raise_()
        self.weight_label.raise_()
        self.sex_label.raise_()
        self.man_radiobutton.raise_()
        self.woman_radiobutton.raise_()
        self.check_button.raise_()
        self.login_button.raise_()
        self.weight_label_2.raise_()
        self.comboBox.raise_()
        self.name_label.raise_()
        self.name_text.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        ###########################################################
        self.pass_text.setPlaceholderText("영문 + 숫자")
        self.pass_check_text.setPlaceholderText("영문 + 숫자")
        self.name_text.setPlaceholderText("ex)홍길동")
        self.birth_text.setPlaceholderText("ex)19990101")
        self.height_text.setPlaceholderText("ex)173")
        self.weight_text.setPlaceholderText("ex)22")

        self.check_button.clicked.connect(self.id_check)
        self.login_button.clicked.connect(self.move_to_login)
        self.join_button.clicked.connect(self.join_function)
        ###########################################################

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.id_text, self.pass_text)
        MainWindow.setTabOrder(self.pass_text, self.pass_check_text)
        MainWindow.setTabOrder(self.pass_check_text, self.birth_text)
        MainWindow.setTabOrder(self.birth_text, self.man_radiobutton)
        MainWindow.setTabOrder(self.man_radiobutton, self.woman_radiobutton)
        MainWindow.setTabOrder(self.woman_radiobutton, self.height_text)
        MainWindow.setTabOrder(self.height_text, self.weight_text)
        MainWindow.setTabOrder(self.weight_text, self.join_button)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Join"))
        self.id_label.setText(_translate("MainWindow", "아   이   디"))
        self.join_button.setText(_translate("MainWindow", "회원가입"))
        self.join_label.setText(_translate("MainWindow", "회원가입"))
        self.pass_label.setText(_translate("MainWindow", "비 밀 번 호"))
        self.pass_check_label.setText(_translate("MainWindow", "비밀번호  확인"))
        self.birth_label.setText(_translate("MainWindow", "생 년 월 일"))
        self.height_label.setText(_translate("MainWindow", "신            장"))
        self.weight_label.setText(_translate("MainWindow", "체 지 방 률"))
        self.sex_label.setText(_translate("MainWindow", "성            별"))
        self.man_radiobutton.setText(_translate("MainWindow", "남자"))
        self.woman_radiobutton.setText(_translate("MainWindow", "여자"))
        self.check_button.setText(_translate("MainWindow", "중복확인"))
        self.login_button.setText(_translate("MainWindow", "로그인"))
        self.weight_label_2.setText(_translate("MainWindow", "담 당 의 사"))
        self.name_label.setText(_translate("MainWindow", "이            름"))
        #################################
        self.doctor_list()
        #################################

    # 담당 의사
    def doctor_list(self):
        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        # 쿼리 실행
        try:
            cursor.execute("SELECT * FROM docter")
        except Exception as e:
            print("예외 발생:", e)
        rows = cursor.fetchall()

        for row in rows:
            self.comboBox.addItem(row[3])

        # 연결 종료
        conn.close()

        ssh.close()

    # 아이디 체크 함수
    def id_check(self):
        user_pid = self.id_text.toPlainText()

        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        # 쿼리 실행
        try:
            cursor.execute("SELECT * FROM user WHERE Pid = ?", (user_pid,))
        except Exception as e:
            print("예외 발생:", e)
        row = cursor.fetchall()

        print(row)

        if row:
            QMessageBox.warning(None, "Join", "아이디가 존재합니다")
            self.id_text.clear()
            self.id_text.setFocus()
        else:
            QMessageBox.information(None, "Join", "아이디 사용이 가능합니다.")

        # 연결 종료
        conn.close()

        ssh.close()

    # 나이 계산하기
    def calculate_age(self, birth_date):
        # 현재 날짜 구하기
        current_date = datetime.now()

        # 생년월일을 datetime 객체로 변환
        birth_date = datetime.strptime(birth_date, '%Y-%m-%d')

        # 현재 나이 계산
        age = current_date.year - birth_date.year - (
                (current_date.month, current_date.day) < (birth_date.month, birth_date.day))

        return age


    # 회원가입 함수
    def join_function(self):
        user_pid = self.id_text.toPlainText()
        user_pass = self.pass_text.toPlainText()
        user_name = self.name_text.toPlainText()
        user_pass_check = self.pass_check_text.toPlainText()
        user_birth = self.birth_text.toPlainText()
        if self.man_radiobutton.isChecked():
            user_sex = 1
        else:
            user_sex = 2
        user_height = self.height_text.toPlainText()
        user_weight = self.weight_text.toPlainText()
        user_doctor = self.comboBox.currentText()

        user_birth_format = user_birth[:4] + "-" + user_birth[4:6] + "-" + user_birth[6:]

        print(user_pid)

        if user_pid == "":
            QMessageBox.warning(None, "Join", "아이디를 입력하세요")
            self.id_text.setFocus()
            return
        if user_pass == "" :
            QMessageBox.warning(None, "Join", "비밀번호를 입력하세요")
            self.pass_text.setFocus()
            return
        if user_pass_check == "" :
            QMessageBox.warning(None, "Join", "비밀번호 확인을 입력하세요")
            self.pass_check_text.setFocus()
            return
        if user_name == "" :
            QMessageBox.warning(None, "Join", "이름을 입력하세요")
            self.name_text.setFocus()
            return
        if user_birth == "" :
            QMessageBox.warning(None, "Join", "생년월일을 입력하세요")
            self.birth_text.setFocus()
            return
        if not self.man_radiobutton.isChecked() and not self.woman_radiobutton.isChecked() :
            QMessageBox.warning(None, "Join", "성별을 선택하세요")
            self.man_radiobutton.setFocus()
            return
        if user_height == "" :
            QMessageBox.warning(None, "Join", "신장을 입력하세요")
            self.height_text.setFocus()
            return
        if user_weight == "" :
            QMessageBox.warning(None, "Join", "체지방률을 입력하세요")
            self.weight_text.setFocus()
            return
        if user_pass != user_pass_check :
            QMessageBox.warning(None, "Join", "비밀번호 확인을 다시 확인하세요")
            self.pass_check_text.setFocus()
            return

        # SSH로 서버에 접속해서 Python 스크립트 실행
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect('192.168.0.40', username='user', password='1234')

        # SSH로 파일 다운로드하여 로컬에서 조회
        sftp = ssh.open_sftp()
        remote_path = '/home/user/test/storedb.db'
        local_path = 'storedb.db'
        sftp.get(remote_path, local_path)
        sftp.close()

        # 로컬에서 SQLite 데이터베이스 연결하여 쿼리 실행
        conn = sqlite3.connect(local_path)
        cursor = conn.cursor()

        # 쿼리 실행
        try:
            cursor.execute("SELECT * FROM user")
        except Exception as e:
            print("예외 발생:", e)
        rows = cursor.fetchall()

        id = rows[len(rows) - 1][0] + 1
        print("id : ", id)

        try :
            cursor.execute("SELECT ID FROM docter WHERE Name = ?", (user_doctor,))
        except Exception as e:
            print("예외 발생:", e)
        row = cursor.fetchall()

        doctor_id = row[0][0]

        # 쿼리 실행
        try:
            cursor.execute("INSERT INTO user(Name, Birth, Sex, Height, BFP, Dis, Pid, Password, Docid) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
                           (user_name, user_birth_format, user_sex, int(user_height), int(user_weight), 1, user_pid, user_pass, int(doctor_id), ))

            cursor.execute("SELECT TraningNum FROM Info")
            rows = cursor.fetchall()

            cursor.execute("INSERT INTO Info VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
                           (len(rows) + 1, id, int(user_height), self.calculate_age(user_birth_format), user_sex, 1, int(user_weight), 0, 5,))
            conn.commit()  # 변경 사항을 반영하기 위해 커밋

            # 변경된 데이터베이스 파일을 서버로 다시 업로드
            sftp = ssh.open_sftp()
            sftp.put(local_path, remote_path)
            sftp.close()

            QMessageBox.information(None, "Join", "회원가입이 완료되었습니다")
            self.move_to_login()
        except Exception as e:
            print("예외 발생:", e)

        # 연결 종료
        conn.close()

        ssh.close()

    # 로그인 화면으로 이동
    def move_to_login(self):
        try:
            from Login import Login
            # 현재 MainWindow를 새로운 창으로 변경
            self.MainWindow.setWindowTitle("Home")  # 새 창의 제목 설정 등 필요한 설정 추가 가능
            self.login_window = Login(self.MainWindow)
            print(userID)
            self.login_window.setupUi(self.MainWindow)  # home 클래스의 setupUi 메서드 호출
            self.MainWindow.show()
        except Exception as e:
            print("join to login error : ", e)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Join(MainWindow)
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
